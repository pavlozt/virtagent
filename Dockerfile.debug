# syntax = docker/dockerfile:1-experimental
FROM golang:1.19-alpine

ARG TARGETOS
ARG TARGETARCH

RUN apk add --no-cache git gcc musl-dev
RUN apk add --no-cache libpcap-dev
RUN apk --no-cache add ca-certificates libpcap


WORKDIR /go/src/app
RUN CGO_ENABLED=0 go install -ldflags "-s -w -extldflags '-static'" github.com/go-delve/delve/cmd/dlv@latest

COPY go.mod go.sum ./
RUN go mod download -x
COPY . .
# read about Docker Buildkit Cache https://www.docker.com/blog/containerize-your-go-developer-environment-part-2/
RUN --mount=type=cache,id=gomod,target=/go/pkg/mod --mount=type=cache,target=/root/.cache/go-build GOOS=${TARGETOS} GOARCH=${TARGETARCH} go build -gcflags "all=-N -l" -o /app .

COPY entrypoint-debug.sh /entrypoint-debug.sh
RUN chmod +x /entrypoint-debug.sh
ENTRYPOINT ["/entrypoint-debug.sh"]

CMD [ ]

LABEL Name=icmpreply Version=0.0.1-debug
